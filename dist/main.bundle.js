(()=>{var e,t,r,n,o,a={3964:(e,t,r)=>{const n=r(7294),{ProgressBar:o}=r(1607),a=r(2671),{LIGHT_THEME_KEY:i}=r(4224);e.exports=({msg:e})=>{const{theme:t}=a(),r=t===i;return n.createElement("div",{className:"loader-container "+(r?"light":"dark")},n.createElement(o,{height:"80",width:"80",ariaLabel:"progress-bar-loading",wrapperStyle:{},wrapperClass:"progress-bar-wrapper",borderColor:r?"#000":"#FFF",barColor:r?"#000":"#FFF"}),n.createElement("span",{className:"loader-container-msg "+(r?"light":"dark")},e))}},4224:e=>{e.exports={APP_NAME:"Weal",KEY_MODE:"mode",KEY_CLEAR:"clear",CMD_MODE_LIGHT:"mode --light",CMD_MODE_DARK:"mode --dark",LIGHT_THEME:"light",DARK_THEME:"dark",LIGHT_THEME_KEY:0,DARK_THEME_KEY:1,DEFAULT_OUTPUTS_LIST:["Welcome to weal interface","-------------------------","The following example commands are provided:","`mode --light`` will change to light theme.","`mode --dark`` will change to dark theme.","`clear` will clear the terminal."],KEY_CODE_ARROW_UP:38,TERMINAL_HEIGHT:500,KEY_THEME:"theme",KEY_HISTORY:"history",BASIC_CMDS:["mode --light","mode --dark","clear"],DEFAULT_PROMPT:"$",CURRENT_DIR_CMD:"current-dir",APP_LOADER_MSG:"Checking process is ready...",FALLBACK_LOADER_MSG:"Sorry, please re-open directory we encountered an error",HEALTH_CMD:"health"}},2671:(e,t,r)=>{const n=r(7294),{getSessionStorage:o,setSessionStorage:a}=r(4222),{defaultTheme:i}=r(5656),{KEY_THEME:l}=r(4224);e.exports=()=>{const[e,t]=n.useState(null);return n.useEffect((()=>{void 0!==o(l)?t(o(l)):t(i)}),[o(l)]),{theme:e,setThemeOnStateAndSession:e=>{a(l,e)}}}},1285:(e,t,r)=>{const n=r(7294),{createRoot:o}=r(745),a=r(3964),{FALLBACK_LOADER_MSG:i}=r(4224);r(5004);const l=o(document.getElementById("root")),s=n.lazy((()=>r.e(238).then(r.t.bind(r,7238,23))));l.render(n.createElement(n.Suspense,{fallback:n.createElement(a,{msg:i})},n.createElement(s,null)))},4222:e=>{e.exports={getLocalStorage:e=>JSON.parse(localStorage.getItem(e)),setLocalStorage:(e,t)=>{localStorage.setItem(e,JSON.stringify(t))},getSessionStorage:e=>JSON.parse(sessionStorage.getItem(e)),setSessionStorage:(e,t)=>{sessionStorage.setItem(e,JSON.stringify(t))}}},5656:(e,t,r)=>{const{ColorMode:n}=r(3794),{CMD_MODE_LIGHT:o,CMD_MODE_DARK:a,LIGHT_THEME:i,DARK_THEME:l}=r(4224),s=Object.freeze({light:n.Light,dark:n.Dark}),c=s[i];e.exports={defaultTheme:c,switchTheme:e=>{let t=i;return e.toLocaleLowerCase().trim()===o?t=i:e.toLocaleLowerCase().trim()===a&&(t=l),s[t]}}},5289:(e,t,r)=>{"use strict";r.d(t,{Z:()=>l});var n=r(7537),o=r.n(n),a=r(3645),i=r.n(a)()(o());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Poppins&display=swap);"]),i.push([e.id,"body {\n  margin: 0;\n  padding: 0;\n  font-family: Poppins, sans-serif;\n}\n\n.react-terminal-wrapper {\n  border-radius: 0 !important;\n  height: 100vh !important;\n  font-size: 14px !important;\n}\n\n.react-terminal:last-child {\n  padding-bottom: 50px;\n}\n\n.loader-container {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n\n.loader-container.dark {\n  background-color: #252a33;\n}\n\n.loader-container.light {\n  background-color: #ddd;\n}\n\n.loader-container-msg.dark {\n  color: #fff;\n}\n\n.loader-container-msg.light {\n  color: #000;\n}\n","",{version:3,sources:["webpack://./interfaces/styles/main.css"],names:[],mappings:"AAEA;EACE,SAAS;EACT,UAAU;EACV,gCAAgC;AAClC;;AAEA;EACE,2BAA2B;EAC3B,wBAAwB;EACxB,0BAA0B;AAC5B;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,WAAW;EACX,aAAa;EACb,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,sBAAsB;AACxB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,WAAW;AACb",sourcesContent:['@import url("https://fonts.googleapis.com/css2?family=Poppins&display=swap");\n\nbody {\n  margin: 0;\n  padding: 0;\n  font-family: Poppins, sans-serif;\n}\n\n.react-terminal-wrapper {\n  border-radius: 0 !important;\n  height: 100vh !important;\n  font-size: 14px !important;\n}\n\n.react-terminal:last-child {\n  padding-bottom: 50px;\n}\n\n.loader-container {\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n}\n\n.loader-container.dark {\n  background-color: #252a33;\n}\n\n.loader-container.light {\n  background-color: #ddd;\n}\n\n.loader-container-msg.dark {\n  color: #fff;\n}\n\n.loader-container-msg.light {\n  color: #000;\n}\n'],sourceRoot:""}]);const l=i},5004:(e,t,r)=>{"use strict";r.r(t),r.d(t,{default:()=>E});var n=r(3379),o=r.n(n),a=r(7795),i=r.n(a),l=r(569),s=r.n(l),c=r(3565),d=r.n(c),A=r(9216),p=r.n(A),m=r(4589),u=r.n(m),g=r(5289),f={};f.styleTagTransform=u(),f.setAttributes=d(),f.insert=s().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),o()(g.Z,f);const E=g.Z&&g.Z.locals?g.Z.locals:void 0}},i={};function l(e){var t=i[e];if(void 0!==t)return t.exports;var r=i[e]={id:e,exports:{}};return a[e].call(r.exports,r,r.exports,l),r.exports}l.m=a,e=[],l.O=(t,r,n,o)=>{if(!r){var a=1/0;for(d=0;d<e.length;d++){for(var[r,n,o]=e[d],i=!0,s=0;s<r.length;s++)(!1&o||a>=o)&&Object.keys(l.O).every((e=>l.O[e](r[s])))?r.splice(s--,1):(i=!1,o<a&&(a=o));if(i){e.splice(d--,1);var c=n();void 0!==c&&(t=c)}}return t}o=o||0;for(var d=e.length;d>0&&e[d-1][2]>o;d--)e[d]=e[d-1];e[d]=[r,n,o]},l.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return l.d(t,{a:t}),t},r=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,l.t=function(e,n){if(1&n&&(e=this(e)),8&n)return e;if("object"==typeof e&&e){if(4&n&&e.__esModule)return e;if(16&n&&"function"==typeof e.then)return e}var o=Object.create(null);l.r(o);var a={};t=t||[null,r({}),r([]),r(r)];for(var i=2&n&&e;"object"==typeof i&&!~t.indexOf(i);i=r(i))Object.getOwnPropertyNames(i).forEach((t=>a[t]=()=>e[t]));return a.default=()=>e,l.d(o,a),o},l.d=(e,t)=>{for(var r in t)l.o(t,r)&&!l.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},l.f={},l.e=e=>Promise.all(Object.keys(l.f).reduce(((t,r)=>(l.f[r](e,t),t)),[])),l.u=e=>e+".bundle.js",l.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),l.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n={},o="weal:",l.l=(e,t,r,a)=>{if(n[e])n[e].push(t);else{var i,s;if(void 0!==r)for(var c=document.getElementsByTagName("script"),d=0;d<c.length;d++){var A=c[d];if(A.getAttribute("src")==e||A.getAttribute("data-webpack")==o+r){i=A;break}}i||(s=!0,(i=document.createElement("script")).charset="utf-8",i.timeout=120,l.nc&&i.setAttribute("nonce",l.nc),i.setAttribute("data-webpack",o+r),i.src=e),n[e]=[t];var p=(t,r)=>{i.onerror=i.onload=null,clearTimeout(m);var o=n[e];if(delete n[e],i.parentNode&&i.parentNode.removeChild(i),o&&o.forEach((e=>e(r))),t)return t(r)},m=setTimeout(p.bind(null,void 0,{type:"timeout",target:i}),12e4);i.onerror=p.bind(null,i.onerror),i.onload=p.bind(null,i.onload),s&&document.head.appendChild(i)}},l.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;l.g.importScripts&&(e=l.g.location+"");var t=l.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),l.p=e})(),(()=>{var e={179:0};l.f.j=(t,r)=>{var n=l.o(e,t)?e[t]:void 0;if(0!==n)if(n)r.push(n[2]);else{var o=new Promise(((r,o)=>n=e[t]=[r,o]));r.push(n[2]=o);var a=l.p+l.u(t),i=new Error;l.l(a,(r=>{if(l.o(e,t)&&(0!==(n=e[t])&&(e[t]=void 0),n)){var o=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;i.message="Loading chunk "+t+" failed.\n("+o+": "+a+")",i.name="ChunkLoadError",i.type=o,i.request=a,n[1](i)}}),"chunk-"+t,t)}},l.O.j=t=>0===e[t];var t=(t,r)=>{var n,o,[a,i,s]=r,c=0;if(a.some((t=>0!==e[t]))){for(n in i)l.o(i,n)&&(l.m[n]=i[n]);if(s)var d=s(l)}for(t&&t(r);c<a.length;c++)o=a[c],l.o(e,o)&&e[o]&&e[o][0](),e[o]=0;return l.O(d)},r=self.webpackChunkweal=self.webpackChunkweal||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})(),l.nc=void 0;var s=l.O(void 0,[256],(()=>l(1285)));s=l.O(s)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,